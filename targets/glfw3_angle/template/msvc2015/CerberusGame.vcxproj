<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug32|Win32">
      <Configuration>Debug32</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug32|x64">
      <Configuration>Debug32</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug64|Win32">
      <Configuration>Debug64</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug64|x64">
      <Configuration>Debug64</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release32|Win32">
      <Configuration>Release32</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release32|x64">
      <Configuration>Release32</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release64|Win32">
      <Configuration>Release64</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release64|x64">
      <Configuration>Release64</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{692B78A5-C3E9-4843-A55A-5E94A35BDFB4}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <RootNamespace>CerberusGame</RootNamespace>
    <WindowsTargetPlatformVersion>8.1</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug32|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug64|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug32|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug64|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release32|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release64|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release32|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release64|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug32|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug64|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug32|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug64|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release32|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release64|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release32|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release64|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug32|Win32'">
    <LinkIncremental>true</LinkIncremental>
    <IntDir>$(SolutionDir)build\$(Configuration)\</IntDir>
    <CustomBuildBeforeTargets />
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug64|Win32'">
    <LinkIncremental>true</LinkIncremental>
    <IntDir>$(SolutionDir)build\$(Configuration)\</IntDir>
    <CustomBuildBeforeTargets />
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug32|x64'">
    <CustomBuildBeforeTargets />
    <LinkIncremental>true</LinkIncremental>
    <OutDir>$(SolutionDir)$(Configuration)\</OutDir>
    <IntDir>$(SolutionDir)build\$(Configuration)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug64|x64'">
    <CustomBuildBeforeTargets />
    <LinkIncremental>true</LinkIncremental>
    <OutDir>$(SolutionDir)$(Configuration)\</OutDir>
    <IntDir>$(SolutionDir)build\$(Configuration)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release32|Win32'">
    <LinkIncremental>false</LinkIncremental>
    <IncludePath>$(VC_IncludePath);$(WindowsSDK_IncludePath);</IncludePath>
    <IntDir>$(SolutionDir)build\$(Configuration)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release64|Win32'">
    <LinkIncremental>false</LinkIncremental>
    <IncludePath>$(VC_IncludePath);$(WindowsSDK_IncludePath);</IncludePath>
    <IntDir>$(SolutionDir)build\$(Configuration)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release32|x64'">
    <LinkIncremental>false</LinkIncremental>
    <IncludePath>$(VC_IncludePath);$(WindowsSDK_IncludePath);</IncludePath>
    <OutDir>$(SolutionDir)$(Configuration)\</OutDir>
    <IntDir>$(SolutionDir)build\$(Configuration)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release64|x64'">
    <LinkIncremental>false</LinkIncremental>
    <IncludePath>$(VC_IncludePath);$(WindowsSDK_IncludePath);</IncludePath>
    <OutDir>$(SolutionDir)$(Configuration)\</OutDir>
    <IntDir>$(SolutionDir)build\$(Configuration)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug32|Win32'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>TurnOffAllWarnings</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>__VISUAL_STUDIO__;$(CerberusDefines);_WIN32;WIN32;_DEBUG;_WINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>$(CerberusIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PrecompiledHeaderFile>
      </PrecompiledHeaderFile>
      <DisableLanguageExtensions>false</DisableLanguageExtensions>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <FunctionLevelLinking>false</FunctionLevelLinking>
      <BasicRuntimeChecks>Default</BasicRuntimeChecks>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Async</ExceptionHandling>
      <MinimalRebuild>true</MinimalRebuild>
      <IntrinsicFunctions>false</IntrinsicFunctions>
      <AdditionalOptions>/bigobj %(AdditionalOptions)</AdditionalOptions>
      <AdditionalUsingDirectories>$(CerberusIncludesPaths);%(AdditionalUsingDirectories)</AdditionalUsingDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>libEGL.dll.lib;libGLESv2.dll.lib;Ws2_32.lib;$(CerberusLinker);%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(CerberusLibraryPaths);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <EntryPointSymbol>mainCRTStartup</EntryPointSymbol>
    </Link>
    <CustomBuildStep>
      <Command>
      </Command>
    </CustomBuildStep>
    <PostBuildEvent>
      <Command>if not exist "$(TargetDir)\libEGL.dll" ( copy "$(CerberusPath)\libs\shared\win$(ARCH)\libEGL.dll" "$(TargetDir)" )
if not exist "$(TargetDir)\libGLESv2.dll" ( copy "$(CerberusPath)\libs\shared\win$(ARCH)\libGLESv2.dll" "$(TargetDir)" )
if not exist "$(TargetDir)\d3dcompiler_47.dll" ( copy "$(CerberusPath)\libs\shared\win$(ARCH)\d3dcompiler_47.dll" "$(TargetDir)" )

if not exist "$(TargetDir)licences\angle\"  (
mkdir "$(TargetDir)licences\"
mkdir "$(TargetDir)licences\angle"
)

if not exist "$(TargetDir)licences\angle\" ( xcopy "$(CerberusPath)\libs\licences\angle\*" "$(TargetDir)licences\angle\" /E )</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug64|Win32'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>TurnOffAllWarnings</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>__VISUAL_STUDIO__;$(CerberusDefines);_WIN32;WIN32;_DEBUG;_WINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>$(CerberusIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PrecompiledHeaderFile>
      </PrecompiledHeaderFile>
      <DisableLanguageExtensions>false</DisableLanguageExtensions>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <FunctionLevelLinking>false</FunctionLevelLinking>
      <BasicRuntimeChecks>Default</BasicRuntimeChecks>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Async</ExceptionHandling>
      <MinimalRebuild>true</MinimalRebuild>
      <IntrinsicFunctions>false</IntrinsicFunctions>
      <AdditionalOptions>/bigobj %(AdditionalOptions)</AdditionalOptions>
      <AdditionalUsingDirectories>$(CerberusIncludesPaths);%(AdditionalUsingDirectories)</AdditionalUsingDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>libEGL.dll.lib;libGLESv2.dll.lib;Ws2_32.lib;$(CerberusLinker);%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(CerberusLibraryPaths);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <EntryPointSymbol>mainCRTStartup</EntryPointSymbol>
      <TargetMachine>MachineX64</TargetMachine>
    </Link>
    <CustomBuildStep>
      <Command>
      </Command>
    </CustomBuildStep>
    <PostBuildEvent>
      <Command>if not exist "$(TargetDir)\libEGL.dll" ( copy "$(CerberusPath)\libs\shared\win$(ARCH)\libEGL.dll" "$(TargetDir)" )
if not exist "$(TargetDir)\libGLESv2.dll" ( copy "$(CerberusPath)\libs\shared\win$(ARCH)\libGLESv2.dll" "$(TargetDir)" )
if not exist "$(TargetDir)\d3dcompiler_47.dll" ( copy "$(CerberusPath)\libs\shared\win$(ARCH)\d3dcompiler_47.dll" "$(TargetDir)" )

if not exist "$(TargetDir)licences\angle\"  (
mkdir "$(TargetDir)licences\"
mkdir "$(TargetDir)licences\angle"
)

if not exist "$(TargetDir)licences\angle\" ( xcopy "$(CerberusPath)\libs\licences\angle\*" "$(TargetDir)licences\angle\" /E )</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug32|x64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>TurnOffAllWarnings</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>__VISUAL_STUDIO__;$(CerberusDefines);_WIN32;WIN32;_DEBUG;_WINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>$(CerberusIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PrecompiledHeaderFile>
      </PrecompiledHeaderFile>
      <DisableLanguageExtensions>false</DisableLanguageExtensions>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <FunctionLevelLinking>false</FunctionLevelLinking>
      <BasicRuntimeChecks>Default</BasicRuntimeChecks>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Async</ExceptionHandling>
      <IntrinsicFunctions>false</IntrinsicFunctions>
      <AdditionalOptions>/bigobj %(AdditionalOptions)</AdditionalOptions>
      <AdditionalUsingDirectories>$(CerberusIncludesPaths);%(AdditionalUsingDirectories)</AdditionalUsingDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>libEGL.dll.lib;libGLESv2.dll.lib;Ws2_32.lib;$(CerberusLinker);%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(CerberusLibraryPaths);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <EntryPointSymbol>mainCRTStartup</EntryPointSymbol>
    </Link>
    <CustomBuildStep>
      <Command>
      </Command>
    </CustomBuildStep>
    <PostBuildEvent>
      <Command>if not exist "$(TargetDir)\libEGL.dll" ( copy "$(CerberusPath)\libs\shared\win$(ARCH)\libEGL.dll" "$(TargetDir)" )
if not exist "$(TargetDir)\libGLESv2.dll" ( copy "$(CerberusPath)\libs\shared\win$(ARCH)\libGLESv2.dll" "$(TargetDir)" )
if not exist "$(TargetDir)\d3dcompiler_47.dll" ( copy "$(CerberusPath)\libs\shared\win$(ARCH)\d3dcompiler_47.dll" "$(TargetDir)" )

if not exist "$(TargetDir)licences\angle\"  (
mkdir "$(TargetDir)licences\"
mkdir "$(TargetDir)licences\angle"
)

if not exist "$(TargetDir)licences\angle\" ( xcopy "$(CerberusPath)\libs\licences\angle\*" "$(TargetDir)licences\angle\" /E )</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug64|x64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>TurnOffAllWarnings</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>__VISUAL_STUDIO__;$(CerberusDefines);_WIN32;WIN32;_DEBUG;_WINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>$(CerberusIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PrecompiledHeaderFile>
      </PrecompiledHeaderFile>
      <DisableLanguageExtensions>false</DisableLanguageExtensions>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <FunctionLevelLinking>false</FunctionLevelLinking>
      <BasicRuntimeChecks>Default</BasicRuntimeChecks>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Async</ExceptionHandling>
      <IntrinsicFunctions>false</IntrinsicFunctions>
      <AdditionalOptions>/bigobj %(AdditionalOptions)</AdditionalOptions>
      <AdditionalUsingDirectories>$(CerberusIncludesPaths);%(AdditionalUsingDirectories)</AdditionalUsingDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>libEGL.dll.lib;libGLESv2.dll.lib;Ws2_32.lib;$(CerberusLinker);%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(CerberusLibraryPaths);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <EntryPointSymbol>mainCRTStartup</EntryPointSymbol>
    </Link>
    <CustomBuildStep>
      <Command>
      </Command>
    </CustomBuildStep>
    <PostBuildEvent>
      <Command>if not exist "$(TargetDir)\libEGL.dll" ( copy "$(CerberusPath)\libs\shared\win$(ARCH)\libEGL.dll" "$(TargetDir)" )
if not exist "$(TargetDir)\libGLESv2.dll" ( copy "$(CerberusPath)\libs\shared\win$(ARCH)\libGLESv2.dll" "$(TargetDir)" )
if not exist "$(TargetDir)\d3dcompiler_47.dll" ( copy "$(CerberusPath)\libs\shared\win$(ARCH)\d3dcompiler_47.dll" "$(TargetDir)" )

if not exist "$(TargetDir)licences\angle\"  (
mkdir "$(TargetDir)licences\"
mkdir "$(TargetDir)licences\angle"
)

if not exist "$(TargetDir)licences\angle\" ( xcopy "$(CerberusPath)\libs\licences\angle\*" "$(TargetDir)licences\angle\" /E )</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release32|Win32'">
    <ClCompile>
      <WarningLevel>TurnOffAllWarnings</WarningLevel>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>false</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>__VISUAL_STUDIO__;$(CerberusDefines);_WIN32;WIN32;NDEBUG;_WINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>$(CerberusIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PrecompiledHeaderFile>
      </PrecompiledHeaderFile>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <ExceptionHandling>Async</ExceptionHandling>
      <AdditionalOptions>/bigobj %(AdditionalOptions)</AdditionalOptions>
      <AdditionalUsingDirectories>$(CerberusIncludesPaths);%(AdditionalUsingDirectories)</AdditionalUsingDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalDependencies>libEGL.dll.lib;libGLESv2.dll.lib;Ws2_32.lib;$(CerberusLinker);%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(CerberusLibraryPaths);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <EntryPointSymbol>mainCRTStartup</EntryPointSymbol>
    </Link>
    <PostBuildEvent>
      <Command>if not exist "$(TargetDir)\libEGL.dll" ( copy "$(CerberusPath)\libs\shared\win$(ARCH)\libEGL.dll" "$(TargetDir)" )
if not exist "$(TargetDir)\libGLESv2.dll" ( copy "$(CerberusPath)\libs\shared\win$(ARCH)\libGLESv2.dll" "$(TargetDir)" )
if not exist "$(TargetDir)\d3dcompiler_47.dll" ( copy "$(CerberusPath)\libs\shared\win$(ARCH)\d3dcompiler_47.dll" "$(TargetDir)" )

if not exist "$(TargetDir)licences\angle\"  (
mkdir "$(TargetDir)licences\"
mkdir "$(TargetDir)licences\angle"
)

if not exist "$(TargetDir)licences\angle\" ( xcopy "$(CerberusPath)\libs\licences\angle\*" "$(TargetDir)licences\angle\" /E )</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release64|Win32'">
    <ClCompile>
      <WarningLevel>TurnOffAllWarnings</WarningLevel>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>false</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>__VISUAL_STUDIO__;$(CerberusDefines);_WIN32;WIN32;NDEBUG;_WINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>$(CerberusIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PrecompiledHeaderFile>
      </PrecompiledHeaderFile>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <ExceptionHandling>Async</ExceptionHandling>
      <AdditionalOptions>/bigobj %(AdditionalOptions)</AdditionalOptions>
      <AdditionalUsingDirectories>$(CerberusIncludesPaths);%(AdditionalUsingDirectories)</AdditionalUsingDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalDependencies>libEGL.dll.lib;libGLESv2.dll.lib;Ws2_32.lib;$(CerberusLinker);%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(CerberusLibraryPaths);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <EntryPointSymbol>mainCRTStartup</EntryPointSymbol>
      <TargetMachine>MachineX64</TargetMachine>
    </Link>
    <PostBuildEvent>
      <Command>if not exist "$(TargetDir)\libEGL.dll" ( copy "$(CerberusPath)\libs\shared\win$(ARCH)\libEGL.dll" "$(TargetDir)" )
if not exist "$(TargetDir)\libGLESv2.dll" ( copy "$(CerberusPath)\libs\shared\win$(ARCH)\libGLESv2.dll" "$(TargetDir)" )
if not exist "$(TargetDir)\d3dcompiler_47.dll" ( copy "$(CerberusPath)\libs\shared\win$(ARCH)\d3dcompiler_47.dll" "$(TargetDir)" )

if not exist "$(TargetDir)licences\angle\"  (
mkdir "$(TargetDir)licences\"
mkdir "$(TargetDir)licences\angle"
)

if not exist "$(TargetDir)licences\angle\" ( xcopy "$(CerberusPath)\libs\licences\angle\*" "$(TargetDir)licences\angle\" /E )</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release32|x64'">
    <ClCompile>
      <WarningLevel>TurnOffAllWarnings</WarningLevel>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>false</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>__VISUAL_STUDIO__;$(CerberusDefines);_WIN32;WIN32;NDEBUG;_WINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>$(CerberusIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PrecompiledHeaderFile>
      </PrecompiledHeaderFile>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <ExceptionHandling>Async</ExceptionHandling>
      <AdditionalOptions>/bigobj %(AdditionalOptions)</AdditionalOptions>
      <AdditionalUsingDirectories>$(CerberusIncludesPaths);%(AdditionalUsingDirectories)</AdditionalUsingDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalDependencies>libEGL.dll.lib;libGLESv2.dll.lib;Ws2_32.lib;$(CerberusLinker);%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(CerberusLibraryPaths);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <EntryPointSymbol>mainCRTStartup</EntryPointSymbol>
    </Link>
    <PostBuildEvent>
      <Command>if not exist "$(TargetDir)\libEGL.dll" ( copy "$(CerberusPath)\libs\shared\win$(ARCH)\libEGL.dll" "$(TargetDir)" )
if not exist "$(TargetDir)\libGLESv2.dll" ( copy "$(CerberusPath)\libs\shared\win$(ARCH)\libGLESv2.dll" "$(TargetDir)" )
if not exist "$(TargetDir)\d3dcompiler_47.dll" ( copy "$(CerberusPath)\libs\shared\win$(ARCH)\d3dcompiler_47.dll" "$(TargetDir)" )

if not exist "$(TargetDir)licences\angle\"  (
mkdir "$(TargetDir)licences\"
mkdir "$(TargetDir)licences\angle"
)

if not exist "$(TargetDir)licences\angle\" ( xcopy "$(CerberusPath)\libs\licences\angle\*" "$(TargetDir)licences\angle\" /E )</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release64|x64'">
    <ClCompile>
      <WarningLevel>TurnOffAllWarnings</WarningLevel>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>false</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>__VISUAL_STUDIO__;$(CerberusDefines);_WIN32;WIN32;NDEBUG;_WINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>$(CerberusIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PrecompiledHeaderFile>
      </PrecompiledHeaderFile>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <ExceptionHandling>Async</ExceptionHandling>
      <AdditionalOptions>/bigobj %(AdditionalOptions)</AdditionalOptions>
      <AdditionalUsingDirectories>$(CerberusIncludesPaths);%(AdditionalUsingDirectories)</AdditionalUsingDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalDependencies>libEGL.dll.lib;libGLESv2.dll.lib;Ws2_32.lib;$(CerberusLinker);%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(CerberusLibraryPaths);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <EntryPointSymbol>mainCRTStartup</EntryPointSymbol>
    </Link>
    <PostBuildEvent>
      <Command>if not exist "$(TargetDir)\libEGL.dll" ( copy "$(CerberusPath)\libs\shared\win$(ARCH)\libEGL.dll" "$(TargetDir)" )
if not exist "$(TargetDir)\libGLESv2.dll" ( copy "$(CerberusPath)\libs\shared\win$(ARCH)\libGLESv2.dll" "$(TargetDir)" )
if not exist "$(TargetDir)\d3dcompiler_47.dll" ( copy "$(CerberusPath)\libs\shared\win$(ARCH)\d3dcompiler_47.dll" "$(TargetDir)" )

if not exist "$(TargetDir)licences\angle\"  (
mkdir "$(TargetDir)licences\"
mkdir "$(TargetDir)licences\angle"
)

if not exist "$(TargetDir)licences\angle\" ( xcopy "$(CerberusPath)\libs\licences\angle\*" "$(TargetDir)licences\angle\" /E )</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="..\main.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="..\main.h" />
    <ClInclude Include="..\resource.h" />
  </ItemGroup>
  <ItemGroup>
    <ResourceCompile Include="..\CerberusGame.rc" />
  </ItemGroup>
  <ItemGroup>
    <Image Include="..\icon.ico" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>