> MISCELLANEOUS SETTINGS
This is a list of miscellaneous preprocessor directives that do not fit into any of the main categories.

[#CPP_DOUBLE_PRECISION_FLOATS](#dd_floats)
[#CPP_GC_MODE](#gc_mode)~n
[#CPP_GC_TRIGGER](#gc_trigger)~n
[#CPP_GC_MAX_LOCALS](#gc_locals)~n
[#OPENGL_DEPTH_BUFFER_ENABLED](#gl_buffer)~n
[#REFLECTION_FILTER](#reflection_filter)~n
[#COPY_LICENCES](#copy_licences)~n
[#GCC_LINUX_NOPIE](#linux_nopie)~n


<a name="dd_floats">
> #CPP_DOUBLE_PRECISION_FLOATS
</a>
<pre>Cerberus Default: #CPP_DOUBLE_PRECISION_FLOATS=False
</pre>
>>>> Compiler: All
>>>> Operating System: All
Setting this directive to 'True' will enable floating poing data types use double precision. This increases the precision of floats and the memory used. See https://en.wikipedia.org/wiki/Double-precision_floating-point_format for imformation about double precision floating point data types.

<a name="gc_mode">
>>> #CPP_GC_MODE
</a>
<pre>Cerberus Default: #CPP_GC_MODE=1
</pre>
>>>> Compiler: All
>>>> Operating System: All
>>>> Advanced: Only advanced users should use this preprocessor directive.
This directive control how offen the Cerberus Garbage Collector should be called to clear memory that is no longer used.~n
The values are:~n
Disable GC = 0
Incremental collect after a Cerberus On method call = 1
Incremental collect every GC allocation = 2

<a name="gc_trigger">
>>> #CPP_GC_TRIGGER
</a>
<pre>Cerberus Default: #CPP_GC_TRIGGER=8388608
</pre>
>>>> Compiler: All
>>>> Operating System: All
>>>> Advanced: Only advanced users should use this preprocessor directive.
Allocate memory in bytes before a GC 'sweep' occurs. The defalt is to use 8Mib.


<a name="gc_locals">
>>> #CPP_GC_MAX_LOCALS
</a>
<pre>Cerberus Default: #CPP_GC_MAX_LOCALS=8192 
</pre>
>>>> Compiler: All
>>>> Operating System: All
>>>> Advanced: Only advanced users should use this preprocessor directive.
This is used with GC_MODE 2 to track local object variables and defaults to 8192.

<a name="gl_buffer">
>>> #OPENGL_DEPTH_BUFFER_ENABLED
</a>
<pre>Cerberus Default: #OPENGL_DEPTH_BUFFER_ENABLED=True 
</pre>
>>>> Compiler: All
>>>> Operating System: All
>>>> Advanced: Only advanced users should use this preprocessor directive.
>>>> NOTE: OpenGL settings. To override, set these in your code BEFORE importing opengl.gles11 or opengl.gles20

<a name="reflection_filter">
>>> #REFLECTION_FILTER
</a>
<pre>Cerberus Default: #REFLECTION_FILTER=""
</pre>
>>>> Compiler: All
>>>> Operating System: All
>>>> Advanced: Only advanced users should use this preprocessor directive.
The preprocessor directive is used in conjunction with the [[Modules/reflection]] module.

<a name="copy_licences">
>>> #COPY_LICENCES
</a>
<pre>Cerberus Default: #COPY_LICENCES=""
</pre>
>>>> Compiler: All
>>>> Operating System: All
Copy any licences located in the libs/licences directory. This is a convenience preprocessor directive for those licences such as LGPG that require you to distribute the copying or a specific licence.~n
Place your licence files in a sub directory in the cerberus\libs\licences directory.


<a name="linux_nopie">
>>> #GCC_LINUX_NOPIE
</a>
<pre>Cerberus Default: #GCC_LINUX_NOPIE=True
</pre>
>>>> Compiler: GCC Linux
>>>> Operating System: Linux
>>>> INTERMEDIATE: Some knoledge is required of linux desktop environments and file hierarchy and minimal scripting in the distributions default console mode application.
Some newer distributions of Linux come with GCC 6 on-ward. These versions generate code that has the [Position Independant Executable (PIE)](https://en.wikipedia.org/wiki/Position-independent_code#PIE) linker option switchd on. Unfortunately some of these distributions come with a file browser that cannot detect that these are actually executable code and will not run them when double clicked. If a version of GCC is detected that is greater than version 5 (the version of GGC where this option in not in the GCC documentation); then this preprocessor directive will turn this feature off. But bewarned that you will lose the security feature that PIE implements. It is advised that you set `#GCC_LINUX_NOPIE` to false for the final build and distribute a script to set up a [desktop entry file](https://www.freedesktop.org/wiki/Specifications/desktop-entry-spec), a type of application launcher. Creating such a script is beyond the limits of this documentation, but it is recommended that you research how these desktop entries are created and where they should be placed within the Linux file hierarchy.
